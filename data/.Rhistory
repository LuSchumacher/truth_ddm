)) +
geom_quantile() +
ggtitle("geom_quantile")
mpg %>%
ggplot(aes(displ,
hwy,
# color = cyl
)) +
geom_quantile(hwy ~ displ) +
ggtitle("geom_quantile")
mpg %>%
ggplot(aes(displ,
hwy,
# color = cyl
)) +
geom_quantile(formula = hwy ~ displ) +
ggtitle("geom_quantile")
mpg %>%
ggplot(aes(displ,
hwy,
# color = cyl
)) +
geom_quantile(formula = y ~ x) +
ggtitle("geom_quantile")
starwars_data = starwars
View(starwars_data)
starwars_data = titanic
titanic
starwars_data = Titanic
Titanic
starwars_data = tibble(Titanic)
View(starwars_data)
starwars_data = diamonds
View(starwars_data)
diamonds %>%
ggplot(aes(carat, price)) +
geom_point()
diamonds %>%
ggplot(aes(carat, price)) +
geom_point(alpha=0.5, size=2)
diamonds %>%
ggplot(aes(carat, price)) +
geom_point(alpha=0.5, size=3)
diamonds %>%
ggplot(aes(carat, price)) +
geom_point(alpha=0.2, size=3)
diamonds %>%
ggplot(aes(carat, price)) +
geom_point(alpha=0.4, size=3)
diamonds %>%
ggplot(aes(carat, price)) +
geom_point(alpha=0.4, size=3) +
geom_smooth(method="lm")
diamonds %>%
ggplot(aes(carat, price)) +
geom_point(alpha=0.4, size=3) +
geom_smooth(method="lm", linetype="dasehd")
diamonds %>%
ggplot(aes(carat, price)) +
geom_point(alpha=0.4, size=3) +
geom_smooth(method="lm", linetype="dashed")
diamonds %>%
ggplot(aes(carat, price)) +
geom_point(alpha=0.4, size=3) +
geom_smooth(method="lm", linetype="dashed", color="orange")
diamonds %>%
ggplot(aes(carat, price)) +
geom_point(alpha=0.4, size=3, color="firebrick") +
geom_smooth(method="lm", linetype="dashed", color="orange")
geom_point(alpha=0.4, size=3, color="gray"") +
diamonds %>%
ggplot(aes(carat, price)) +
geom_point(alpha=0.4, size=3, color="gray") +
diamonds %>%
ggplot(aes(carat, price)) +
geom_point(alpha=0.4, size=3, color="gray") +
geom_smooth(method="lm", linetype="dashed", color="orange")
diamonds %>%
ggplot(aes(carat, price)) +
geom_point(alpha=0.4, size=3) +
geom_smooth(method="lm", linetype="dashed", color="orange")
diamonds %>%
filter(carat <= 3) %>%
ggplot(aes(carat, price)) +
geom_point(alpha=0.4, size=3) +
geom_smooth(method="lm", linetype="dashed", color="orange")
diamonds %>%
filter(carat <= 3) %>%
ggplot(aes(carat, price)) +
geom_point(alpha=0.4, size=3) +
geom_smooth(method="lm", linetype="dashed", color="orange") +
geom_rug()
diamonds %>%
filter(carat <= 3) %>%
ggplot(aes(carat, price)) +
geom_point(alpha=0.4, size=3) +
geom_smooth(method="lm", linetype="dashed", color="orange") +
geom_rug(alpha=0.2)
diamonds %>%
filter(carat <= 3) %>%
ggplot(aes(carat, price)) +
geom_point(alpha=0.4, size=3) +
geom_smooth(method="lm", linetype="dashed", color="orange")
diamonds %>%
filter(carat <= 3) %>%
ggplot(aes(carat, price)) +
geom_point(alpha = 0.4, size = 3) +
geom_smooth(method = "lm", linetype = "dashed", color = "orange") +
geom_smooth(method = "exp", linetype = "dashed", color = "orange") +
```
diamonds %>%
filter(carat <= 3) %>%
ggplot(aes(carat, price)) +
geom_point(alpha = 0.4, size = 3) +
geom_smooth(method = "lm", linetype = "dashed", color = "orange") +
geom_smooth(method = "exp", linetype = "dashed", color = "orange")
diamonds %>%
filter(carat <= 3) %>%
ggplot(aes(carat, price)) +
geom_point(alpha = 0.4, size = 3) +
# geom_smooth(method = "lm", linetype = "dashed", color = "orange") +
geom_smooth(method = "exp", linetype = "dashed", color = "orange")
diamonds %>%
filter(carat <= 3) %>%
ggplot(aes(carat, price)) +
geom_point(alpha = 0.4, size = 3) +
# geom_smooth(method = "lm", linetype = "dashed", color = "orange") +
geom_smooth(method = "glm", linetype = "dashed", color = "orange")
diamonds %>%
filter(carat <= 3) %>%
ggplot(aes(carat, price)) +
geom_point(alpha = 0.4, size = 3) +
geom_smooth(method = "lm", linetype = "dashed", color = "orange")
diamonds %>%
filter(carat <= 3) %>%
ggplot(aes(carat, price)) +
geom_point(alpha = 0.4, size = 3) +
geom_smooth(method = "lm", linetype = "dashed", color = "orange")
mpg %>%
ggplot(aes(displ,
hwy,
)) +
geom_hex() +
ggtitle("geom_hex")
library(tidyverse)
library(magrittr)
library(cowplot)
library(gapminder)
library(quantreg)
library(hexbin)
mpg %>%
ggplot(aes(displ,
hwy,
)) +
geom_hex() +
ggtitle("geom_hex")
p1 <- mpg %>%
ggplot(aes(displ,
hwy,
)) +
geom_bin2d() +
ggtitle("geom_bin2d")
p2 <- mpg %>%
ggplot(aes(displ,
hwy,
)) +
geom_density2d() +
ggtitle("geom_density2d")
p3 <- mpg %>%
ggplot(aes(displ,
hwy,
)) +
geom_hex() +
ggtitle("geom_hex")
cowplot::plot_grid(p1, p2, p3, ncol = 3)
library(tidyverse)
files <- list.files("data/", pattern = ".csv")
print(files)
files <- fs::dir_ls("data/", glob = "*.csv")
print(files)
tb <- read_csv(files, id = "path")
print(tb, n = 2)
glimpse(tb)
starwars %>%
group_by(gender) %>%
summarise(
avg_height = mean(height, na.rm = TRUE),
sd_height = sd(height, na.rm = TRUE),
num_indiviudals = n()
)
measures_sub_1 <- tibble(
subject = rep(1, 9),
value = rnorm(9, 100, 1)
)
measures_sub_2 <- tibble(
subject = rep(2, 10),
gender = rep('f', 10),
value = rnorm(10, 100, 1)
)
cbind(measures_sub_1, measures_sub_2)
bind_cols(measures_sub_1, measures_sub_2)
View(measures_sub_1)
View(measures_sub_2)
View(measures_sub_1)
View(measures_sub_2)
View(measures_sub_1)
View(measures_sub_2)
View(measures_sub_1)
View(measures_sub_2)
measures_1 <- tibble(
subject = rep(1, 10),
value_1 = rnorm(10, 100, 1)
)
measures_2 <- tibble(
gender = rep('f', 10),
value_2 = rnorm(10, 100, 1)
)
cbind(measures_1, measures_2)
bind_cols(measures_1, measures_2)
measures <- tibble(subject = rep(paste0("s", 1:10),
each = 10),
iq_test = rnorm(100, 100, 15))
meta_data <- tibble(subject = paste0("s", 1:10),
age = rep(c("old", "young"),
each = 5))
measures %>%
inner_join(meta_data, by = 'subject') %>%
head(n = 5)
measures %>%
inner_join(meta_data, by = 'subject')
ggplot(
data = mpg,
mapping = aes(x = displ, y = hwy)
) +
geom_point()
mpg %>%
ggplot(mapping = aes(x = displ, y = hwy)) +
geom_point(
color = "red",
size = 3,
shape = 4,
alpha = 0.75
)
df <- cbind(measures_1, measures_2)
head(df, n = 2)
df <- bind_cols(measures_1, measures_2)
head(df, n = 2)
knitr::include_graphics("img/session_10/eval_01.png")
df <- life_data %>%
inner_join(drink_data, by = "country") %>%
mutate(
income_group = factor(
income_group,
levels = c(
"Low_income", "Lower_middle_income",
"Upper_middle_income", "High_income"
)
),
year = factor(year)
)
library(tidyverse)
library(magrittr)
drink_data <- read_csv("drinks.csv")
life_data <- read_csv("lifeexpectancy.csv")
drink_data %<>%
select(-total_litres_of_pure_alcohol) %>%
mutate(
beer_servings = as.numeric(ifelse(beer_servings == "?", NA, beer_servings)),
spirit_servings = as.numeric(ifelse(spirit_servings == "?", NA, spirit_servings)),
wine_servings = as.numeric(ifelse(wine_servings == "?", NA, wine_servings))
)
drink_data$total_servings <- rowSums(drink_data[ , 2:4], na.rm = TRUE)
life_data %<>%
select(
GhoDisplay, YearCode, RegionDisplay, WorldBankIncomeGroupDisplay,
CountryDisplay, SexDisplay, Numeric
) %>%
rename(
life_type = GhoDisplay,
year = YearCode,
region = RegionDisplay,
income_group = WorldBankIncomeGroupDisplay,
country = CountryDisplay,
sex = SexDisplay,
life_exp = Numeric
) %>%
relocate(country, region, income_group, year, sex, life_type, life_exp)
life_data$region[life_data$country == "South Sudan"] <- "Africa"
life_data$income_group[life_data$country == "South Sudan"] <- "Low_income"
for (country in unique(life_data$country)) {
unique_income <- unique(life_data$income_group[life_data$country == country])
life_data$income_group[life_data$country == country] <- unique_income[!is.na(unique_income)]
}
life_data$income_group_numeric <- NA
for (label in unique(life_data$income_group)) {
if (label == unique(life_data$income_group)[1]) {
value <- 1
} else if (label == unique(life_data$income_group)[2]) {
value <- 2
} else if (label == unique(life_data$income_group)[3]) {
value <- 3
} else {
value <- 4
}
life_data$income_group_numeric[life_data$income_group == label] <- value
}
life_data %<>%
relocate(country, region, income_group, income_group_numeric, year, sex, life_type, life_exp)
df <- life_data %>%
inner_join(drink_data, by = "country") %>%
mutate(
income_group = factor(
income_group,
levels = c(
"Low_income", "Lower_middle_income",
"Upper_middle_income", "High_income"
)
),
year = factor(year)
)
glimpse(df)
library(tidyverse)
library(magrittr)
for (i in x) {
if (i <= 5) {
print("small")
} else {
print("large")
}
}
x <- 1:10
for (i in x) {
if (i <= 5) {
print("small")
} else {
print("large")
}
}
library(tidyverse)
library(magrittr)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
df <- read.csv2('../data/raw_data.csv')
df %<>%
select(id, trial, session,
statement_type,
factual_truth,
responses,
dur_trial) %>%
rename(stim_type=statement_type,
correct_resp=factual_truth,
resp=responses,
rt=dur_trial) %>%
mutate(stim_type=as.factor(stim_type),
correct_resp=ifelse(correct_resp == 'true', 1, 0)) %>%
mutate(correct=ifelse(correct_resp == resp, 1, 0)) %>%
filter(rt > 0) %>%
group_by(id) %>%
filter(
log(rt) > boxplot(log(rt))$stats[1],
log(rt) < boxplot(log(rt))$stats[5]
) %>%
ungroup()
library(tidyverse)
library(magrittr)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
df <- read.csv2('../data/raw_data.csv')
df %<>%
select(id, trial, session,
statement_type,
factual_truth,
responses,
dur_trial) %>%
rename(stim_type=statement_type,
correct_resp=factual_truth,
resp=responses,
rt=dur_trial) %>%
mutate(stim_type=as.factor(stim_type),
correct_resp=ifelse(correct_resp == 'true', 1, 0)) %>%
mutate(correct=ifelse(correct_resp == resp, 1, 0)) %>%
filter(rt > 0) %>%
group_by(id) %>%
filter(
log(rt) > boxplot(log(rt))$stats[1],
log(rt) < boxplot(log(rt))$stats[5]
) %>%
ungroup() %>%
mutate(id = dense_rank(id))
View(df)
summary <- df %>%
group_by(id, session) %>%
summarise(
N = n(),
min = min(rt),
max = max(rt),
mean = mean(rt),
)
View(summary)
unique(df_session_1$id)
# save session data
df_session_1 <- df %>%
filter(session == 1) %>%
write_csv(., '../data/data_session_1.csv')
df_session_2 <- df %>%
filter(session == 2) %>%
write_csv(., '../data/data_session_2.csv')
unique(df_session_1$id)
library(tidyverse)
df <- read_csv('/Users/lschumacher/Documents/projects/collapsing_ddm/data/optimal_policy_data.csv')
library(tidyverse)
df <- read_csv('/Users/lschumacher/Documents/projects/collapsing_ddm/data/optimal_policy_data.csv')
View(df)
summary <- df %>%
group_by(id, feedback, trial_condition, block) %>%
summarise(N = n())
View(summary)
library(tidyverse)
library(magrittr)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
df <- read.csv2('../data/raw_data.csv')
df %<>%
select(
id, trial, session, statement_type,
factual_truth, responses, dur_trial
) %>%
rename(
stim_type = statement_type,
correct_resp = factual_truth,
resp = responses,
rt = dur_trial
) %>%
mutate(
stim_type = as.factor(stim_type),
correct_resp = ifelse(correct_resp == 'true', 1, 0)
) %>%
mutate(correct = ifelse(correct_resp == resp, 1, 0)) %>%
filter(rt > 0) %>%
group_by(id) %>%
filter(
log(rt) > boxplot(log(rt))$stats[1],
log(rt) < boxplot(log(rt))$stats[5]
) %>%
ungroup() %>%
mutate(id = dense_rank(id))
summary <- df %>%
group_by(id, session) %>%
summarise(
N = n(),
min = min(rt),
max = max(rt),
mean = mean(rt),
)
# save session data
df_session_1 <- df %>%
filter(session == 1) %>%
write_csv(., '../data/data_session_1.csv')
df_session_2 <- df %>%
filter(session == 2) %>%
write_csv(., '../data/data_session_2.csv')
library(tidyverse)
df <- read_csv("/Users/lschumacher/Documents/GitHub/Non-Stationary-DDM-Validation/applications/inference/data/data_color_discrimination.csv")
library(tidyverse)
df <- read_csv("/Users/lschumacher/Documents/GitHub/Non-Stationary-DDM-Validation/applications/inference/data/data_color_discrimination.csv")
View(df)
rep(1:768, times=14)
df$trial <- rep(1:768, times=14)
View(df)
subset <- df %>%
filter(trial <= 96)
View(subset)
library(tidyverse)
df <- read_csv("/Users/lschumacher/Documents/GitHub/Non-Stationary-DDM-Validation/applications/inference/data/data_color_discrimination.csv")
df$trial <- rep(1:768, times=14)
subset <- df %>%
filter(trial <= 96)
summary <- subset %>%
group_by(id, speed_condition, difficulty) %>%
summarise(
median_rt = median(rt)
)
View(summary)
library(tidyverse)
df <- read_csv("/Users/lschumacher/Documents/GitHub/Non-Stationary-DDM-Validation/applications/inference/data/data_color_discrimination.csv")
df$trial <- rep(1:768, times=14)
subset <- df %>%
filter(trial <= 96)
summary <- subset %>%
group_by(speed_condition, difficulty) %>%
summarise(
median_rt = median(rt)
)
View(df)
View(summary)
summary <- subset %>%
group_by(speed_condition, difficulty) %>%
summarise(
median_rt = median(rt)
mad = median(abs(RT - median(rt)))
summary <- subset %>%
group_by(speed_condition, difficulty) %>%
summarise(
median_rt = median(rt),
mad = median(abs(RT - median(rt)))
)
summary <- subset %>%
group_by(speed_condition, difficulty) %>%
summarise(
median_rt = median(rt),
mad = median(abs(rt- median(rt)))
)
View(summary)
View(df)
View(subset)
